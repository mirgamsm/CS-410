# Generated by Django 3.2.8 on 2021-11-07 21:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import tutor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', tutor.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(blank=True, max_length=20, verbose_name='First Name')),
                ('lastname', models.CharField(blank=True, max_length=20, verbose_name='Last Name')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=12, verbose_name='Phone Number')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Non-Binary', 'Non-Binary'), ('Other', 'Other')], default='None', max_length=10)),
                ('introduction', models.TextField(blank=True, verbose_name='Introduction (Describe Yourself in 200 Words or Less)')),
                ('languages', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('English', 'English'), ('Spanish', 'Spanish'), ('Chinese', 'Chinese'), ('Other', 'Other')], default='None', max_length=29, verbose_name='Languages Spoken Fluently')),
                ('education', models.CharField(blank=True, choices=[('None', 'None'), ('CIN', 'Currently Enrolled In College'), ('AS', "Associate's Degree"), ('TECH', 'Technical Certification'), ('BAS', "Bachelor's Degree"), ('MA', "Master's Degree"), ('ED', 'Education Specialist/6th Year/Etc . . .'), ('EDD', 'Doctorate or Higher')], default='None', max_length=60, verbose_name='Highest Level of Education')),
                ('major', models.CharField(blank=True, max_length=20, verbose_name='Major (If Applicable)')),
                ('minor', models.CharField(blank=True, max_length=20, verbose_name='Minor (If Applicable)')),
                ('experience', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=4, verbose_name='Are You A Certified Teacher?')),
                ('statecert', models.CharField(choices=[('AL', 'AL'), ('AK', 'AK'), ('AR', 'AR'), ('AZ', 'AZ'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DC', 'DC'), ('DE', 'DE'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('IA', 'IA'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('MA', 'MA'), ('MD', 'MD'), ('ME', 'ME'), ('MI', 'MI'), ('MN', 'MN'), ('MO', 'MO'), ('MS', 'MS'), ('MT', 'MT'), ('NC', 'NC'), ('NE', 'NE'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NV', 'NV'), ('NY', 'NY'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WI', 'WI'), ('WV', 'WV'), ('WY', 'WY'), ('None', 'None')], default='None', max_length=5, verbose_name='Please Choose The State In Which You are Certified:')),
                ('phonicsex', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Fundations', 'Fundations'), ('Fountas & Pinnell Literacy', 'Fountas & Pinnell Literacy'), ('Lucy Calkins Units Of Study For Teaching Phonics', 'Lucy Calkins Units Of Study For Teaching Phonics'), ('Bridge The Gap Intervention', 'Bridge The Gap Intervention'), ('Words Their Way', 'Words Their Way'), ('Lalilo', 'Lalilo'), ('The Heggerty Curriculum', 'The Heggerty Curriculum'), ('Orton Gillingham Approach', 'Orton Gillingham Approach'), ('Phonics First', 'Phonics First'), ('Other', 'Other')], max_length=207, verbose_name='Choose Any Phonics Programs You Have Experience With:')),
                ('employment', models.CharField(blank=True, choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time'), ('College Student', 'College Student'), ('Retired', 'Retired'), ('Other', 'Other')], max_length=20, verbose_name='Employment Status')),
                ('curremployment', models.CharField(blank=True, max_length=30, verbose_name='Current or Most Recent Job Title (If Applicable)')),
                ('employer', models.CharField(blank=True, max_length=30, verbose_name='Employer (If Applicable)')),
                ('employeraddress', models.CharField(blank=True, max_length=30, verbose_name='Employer Address (If Applicable)')),
                ('currreference', models.CharField(blank=True, max_length=20, verbose_name='Supervisor/Reference Contact Information (If Applicable)')),
                ('teachercharacteristics', models.TextField(blank=True, max_length=200, verbose_name='What Characteristics Make A Good Teacher: (200 Words or Less)')),
                ('abilitiesquestion', models.TextField(blank=True, max_length=200, verbose_name='How Would You Address A Range Of Abilities In Your Classroom: (200 Words or Less)')),
                ('availability', models.CharField(blank=True, choices=[('AM', 'Part Time AM'), ('PM', 'Part Time PM'), ('F', 'Full Time (AM and PM)')], max_length=20, verbose_name='Choose Your Availability:')),
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
